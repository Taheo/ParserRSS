{"version":3,"sources":["System/Collections/HashSet.ts"],"names":[],"mappings":"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","file":"HashSet.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {Type} from \"../Types\";\r\nimport {SetBase} from \"./SetBase\";\r\nimport {IMap} from \"../../IMap\";\r\nimport {ILinkedNodeWithValue} from \"./ILinkedListNode\";\r\nimport {IEnumerableOrArray} from \"./IEnumerableOrArray\";\r\nimport {Selector} from \"../FunctionTypes\";\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport class HashSet<T>\r\nextends SetBase<T>\r\n{\r\n\tprivate readonly _keyGenerator:Selector<T,string|number|symbol>;\r\n\r\n\tconstructor(keyGenerator:Selector<T,string|number|symbol>)\r\n\tconstructor(source:IEnumerableOrArray<T>|undefined, keyGenerator:Selector<T,string|number|symbol>)\r\n\tconstructor(source:IEnumerableOrArray<T>|Selector<T,string|number|symbol>|undefined, keyGenerator?:Selector<T,string|number|symbol>)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(Type.isFunction(source)) {\r\n\t\t\tthis._keyGenerator = source;\r\n\t\t} else {\r\n\t\t\tif(!keyGenerator)\r\n\t\t\t\tthrow new ArgumentNullException(\"keyGenerator\");\r\n\t\t\tthis._keyGenerator = keyGenerator;\r\n\t\t\tthis._importEntries(source);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected newUsing(source?:IEnumerableOrArray<T>):HashSet<T>\r\n\t{\r\n\t\treturn new HashSet<T>(source,this._keyGenerator);\r\n\t}\r\n\r\n\tprivate _registry:IMap<IMap<ILinkedNodeWithValue<T>>>;\r\n\r\n\tprotected _addInternal(item:T):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst type = typeof item;\r\n\t\tlet r = _._registry, t = r && r[type];\r\n\t\tconst key = _._keyGenerator(item);\r\n\t\tif(!t || t[key]===VOID0)\r\n\t\t{\r\n\t\t\tif(!r) {\r\n\t\t\t\t//noinspection JSUnusedAssignment\r\n\t\t\t\t_._registry = r = {};\r\n\t\t\t}\r\n\t\t\tif(!t) {\r\n\t\t\t\t//noinspection JSUnusedAssignment\r\n\t\t\t\tr[type] = t = {};\r\n\t\t\t}\r\n\r\n\t\t\tconst node:ILinkedNodeWithValue<T> = {value: item};\r\n\t\t\t_._getSet().addNode(node);\r\n\t\t\tt[key] = node;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\twipe(this._registry, 2);\r\n\t\treturn super._clearInternal();\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._registry = <any>null;\r\n\t\t(<any>this)._keyGenerator = VOID0;\r\n\t}\r\n\r\n\tprotected _getNode(item:T):ILinkedNodeWithValue<T>|undefined\r\n\t{\r\n\t\tconst r = this._registry, t = r && r[typeof item];\r\n\t\treturn t && t[this._keyGenerator(item)];\r\n\t}\r\n\r\n\tprotected _removeInternal(item:T, max:number = Infinity):number\r\n\t{\r\n\t\tif(max===0) return 0;\r\n\r\n\t\tconst r    = this._registry,\r\n\t\t      t    = r && r[typeof item],\r\n\t\t      node = t && t[<any>item];\r\n\r\n\t\tif(node)\r\n\t\t{\r\n\t\t\tdelete t[<any>item];\r\n\t\t\tconst s = this._set;\r\n\t\t\tif(s && s.removeNode(node))\r\n\t\t\t{\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n}\r\n\r\nfunction wipe(map:IMap<any>, depth:number = 1):void\r\n{\r\n\tif(map && depth)\r\n\t{\r\n\t\tfor(let key of Object.keys(map))\r\n\t\t{\r\n\t\t\tlet v = map[key];\r\n\t\t\tdelete map[key];\r\n\t\t\twipe(v, depth - 1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default HashSet;"]}