{"version":3,"sources":["System/Collections/ReadOnlyCollectionWrapper.ts"],"names":[],"mappings":";;AAAA;;;GAGG;AACH,6EAA0E;AAC1E,mEAAgE;AAGhE,uDAAgE;AAChE,kCAA8B;AAC9B,yCAA4C;AAC5C,oCAAoC;AACpC,IAAM,SAAS,GAAG,iBAAe,CAAC;AAElC;IAA0D,6CAAyB;IAElF,mCAAY,UAAsC;QAAlD,YAEC,iBAAO,SAgBP;QAdA,EAAE,CAAA,CAAC,CAAC,UAAU,CAAC;YACd,MAAM,IAAI,6CAAqB,CAAC,YAAY,CAAC,CAAC;QAE/C,IAAM,CAAC,GAAG,KAAI,CAAC;QACf,4DAA4D;QAC5D,EAAE,CAAA,CAAC,YAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAChC,CAAC;YACA,CAAC,CAAC,SAAS,GAAG,cAAI,OAAA,UAAU,CAAC,MAAM,EAAjB,CAAiB,CAAC;YACpC,CAAC,CAAC,cAAc,GAAG,cAAK,OAAA,iBAAc,CAAC,UAAU,CAAC,EAA1B,CAA0B,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,CAAC,CAAC,SAAS,GAAG,cAAI,OAAA,UAAU,CAAC,KAAK,EAAhB,CAAgB,CAAC;YACnC,CAAC,CAAC,cAAc,GAAG,cAAK,OAAA,UAAU,CAAC,aAAa,EAAE,EAA1B,CAA0B,CAAC;QACpD,CAAC;;IAEF,CAAC;IAKS,6CAAS,GAAnB;QAEC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAES,kDAAc,GAAxB;QAEC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC/B,CAAC;IAES,8CAAU,GAApB;QAEC,iBAAM,UAAU,WAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAQ,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAQ,IAAI,CAAC;IAClC,CAAC;IAEF,gCAAC;AAAD,CA5CA,AA4CC,CA5CyD,+CAAsB,GA4C/E","file":"ReadOnlyCollectionWrapper.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"./ReadOnlyCollectionBase\";\r\nimport {ICollection} from \"./ICollection\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport {from as enumeratorFrom} from \"./Enumeration/Enumerator\";\r\nimport {Type} from \"../Types\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport default class ReadOnlyCollectionWrapper<T> extends ReadOnlyCollectionBase<T>\r\n{\r\n\tconstructor(collection:ICollection<T>|ArrayLike<T>)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(!collection)\r\n\t\t\tthrow new ArgumentNullException('collection');\r\n\r\n\t\tconst _ = this;\r\n\t\t// Attempting to avoid contact with the original collection.\r\n\t\tif(Type.isArrayLike(collection))\r\n\t\t{\r\n\t\t\t_._getCount = ()=>collection.length;\r\n\t\t\t_._getEnumerator = ()=> enumeratorFrom(collection);\r\n\t\t} else {\r\n\t\t\t_._getCount = ()=>collection.count;\r\n\t\t\t_._getEnumerator = ()=> collection.getEnumerator();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate __getCount:()=>number;\r\n\tprivate __getEnumerator:()=>IEnumerator<T>;\r\n\r\n\tprotected _getCount():number\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getCount();\r\n\t}\r\n\r\n\tprotected _getEnumerator():IEnumerator<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.__getEnumerator();\r\n\t}\r\n\r\n\tprotected _onDispose()\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis.__getCount = <any>null;\r\n\t\tthis.__getEnumerator = <any>null;\r\n\t}\r\n\r\n}\r\n"]}