{"version":3,"sources":["System/Collections/CollectionBase.ts"],"names":[],"mappings":"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","file":"CollectionBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {forEach} from \"./Enumeration/Enumerator\";\r\nimport {areEqual} from \"../Compare\";\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {InvalidOperationException} from \"../Exceptions/InvalidOperationException\";\r\nimport {DisposableBase} from \"../Disposable/DisposableBase\";\r\nimport {ICollection} from \"./ICollection\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport {IEnumerateEach} from \"./Enumeration/IEnumerateEach\";\r\nimport {EqualityComparison, Action, PredicateWithIndex, ActionWithIndex} from \"../FunctionTypes\";\r\nimport {IEnumerableOrArray} from \"./IEnumerableOrArray\";\r\nimport {ArrayLikeWritable} from \"./Array/ArrayLikeWritable\";\r\nimport {ILinqEnumerable} from \"../../System.Linq/Enumerable\";\r\nimport {isCommonJS, isRequireJS, isNodeJS} from \"../Environment\";\r\nimport __extendsImport from \"../../extends\";\r\n//noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n//noinspection SpellCheckingInspection\r\nconst\r\n\tNAME = \"CollectionBase\",\r\n\tCMDC = \"Cannot modify a disposed collection.\",\r\n\tCMRO = \"Cannot modify a read-only collection.\";\r\nconst\r\n\tLINQ_PATH = \"../../System.Linq/Linq\";\r\n\r\nexport abstract class CollectionBase<T>\r\nextends DisposableBase implements ICollection<T>, IEnumerateEach<T>\r\n{\r\n\r\n\tconstructor(\r\n\t\tsource?:IEnumerableOrArray<T>|IEnumerator<T>,\r\n\t\tprotected _equalityComparer:EqualityComparison<T|null|undefined> = areEqual)\r\n\t{\r\n\t\tsuper();\r\n\t\tconst _ = this;\r\n\t\t_._disposableObjectName = NAME;\r\n\t\t_._importEntries(source);\r\n\t\t_._updateRecursion = 0;\r\n\t\t_._modifiedCount = 0;\r\n\t\t_._version = 0;\r\n\t}\r\n\r\n\r\n\tprotected abstract getCount():number;\r\n\r\n\tget count():number\r\n\t{\r\n\t\treturn this.getCount();\r\n\t}\r\n\r\n\tprotected getIsReadOnly():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\tget isReadOnly():boolean\r\n\t{\r\n\t\treturn this.getIsReadOnly();\r\n\t}\r\n\r\n\tprotected assertModifiable():true|never\r\n\t{\r\n\t\tthis.throwIfDisposed(CMDC);\r\n\t\tif(this.getIsReadOnly())\r\n\t\t\tthrow new InvalidOperationException(CMRO);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected _version:number; // Provides an easy means of tracking changes and invalidating enumerables.\r\n\r\n\r\n\tprotected assertVersion(version:number):true|never\r\n\t{\r\n\t\tif(version!==this._version)\r\n\t\t\tthrow new InvalidOperationException(\"Collection was modified.\");\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * Note: Avoid changing modified count by any means but ++;\r\n\t * If setting modified count by the result of a closure it may be a negative number or NaN and ruin the pattern.\r\n\t */\r\n\tprivate _modifiedCount:number;\r\n\tprivate _updateRecursion:number;\r\n\r\n\tprotected _onModified():void {}\r\n\r\n\tprotected _signalModification(increment?:boolean):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(increment) _._modifiedCount++;\r\n\t\tif(_._modifiedCount && !this._updateRecursion)\r\n\t\t{\r\n\t\t\t_._modifiedCount = 0;\r\n\t\t\t_._version++;\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\t_._onModified();\r\n\t\t\t}\r\n\t\t\tcatch(ex)\r\n\t\t\t{\r\n\t\t\t\t// Avoid fatal errors which may have been caused by consumer.\r\n\t\t\t\tconsole.error(ex);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _incrementModified():void { this._modifiedCount++; }\r\n\r\n\t//noinspection JSUnusedGlobalSymbols\r\n\tget isUpdating():boolean { return this._updateRecursion!=0; }\r\n\r\n\t/**\r\n\t * Takes a closure that if returning true will propagate an update signal.\r\n\t * Multiple update operations can be occurring at once or recursively and the onModified signal will only occur once they're done.\r\n\t * @param closure\r\n\t * @returns {boolean}\r\n\t */\r\n\thandleUpdate(closure?:() => boolean):boolean\r\n\t{\r\n\t\tif(!closure) return false;\r\n\t\tconst _ = this;\r\n\t\t_.assertModifiable();\r\n\t\t_._updateRecursion++;\r\n\t\tlet updated:boolean = false;\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tif(updated = closure())\r\n\t\t\t\t_._modifiedCount++;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\t_._updateRecursion--;\r\n\t\t}\r\n\r\n\t\t_._signalModification();\r\n\r\n\t\treturn updated;\r\n\t}\r\n\r\n\tprotected abstract _addInternal(entry:T):boolean;\r\n\r\n\t/*\r\n\t * Note: for a slight amount more code, we avoid creating functions/closures.\r\n\t * Calling handleUpdate is the correct pattern, but if possible avoid creating another function scope.\r\n\t */\r\n\r\n\t/**\r\n\t * Adds an entry to the collection.\r\n\t * @param entry\r\n\t */\r\n\tadd(entry:T):void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.assertModifiable();\r\n\t\t_._updateRecursion++;\r\n\r\n\t\ttry\r\n\t\t{ if(_._addInternal(entry)) _._modifiedCount++; }\r\n\t\tfinally\r\n\t\t{ _._updateRecursion--; }\r\n\r\n\t\t_._signalModification();\r\n\t}\r\n\r\n\tprotected abstract _removeInternal(entry:T, max?:number):number;\r\n\r\n\t/**\r\n\t * Removes entries from the collection allowing for a limit.\r\n\t * For example if the collection not a distinct set, more than one entry could be removed.\r\n\t * @param entry The entry to remove.\r\n\t * @param max Limit of entries to remove.  Will remove all matches if no max specified.\r\n\t * @returns {number} The number of entries removed.\r\n\t */\r\n\tremove(entry:T, max:number = Infinity):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.assertModifiable();\r\n\t\t_._updateRecursion++;\r\n\r\n\t\tlet n:number = NaN;\r\n\t\ttry\r\n\t\t{ if(n = _._removeInternal(entry, max)) _._modifiedCount++; }\r\n\t\tfinally\r\n\t\t{ _._updateRecursion--; }\r\n\r\n\t\t_._signalModification();\r\n\t\treturn n;\r\n\t}\r\n\r\n\tprotected abstract _clearInternal():number;\r\n\r\n\t/**\r\n\t * Clears the contents of the collection resulting in a count of zero.\r\n\t * @returns {number}\r\n\t */\r\n\tclear():number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.assertModifiable();\r\n\t\t_._updateRecursion++;\r\n\r\n\t\tlet n:number = NaN;\r\n\t\ttry\r\n\t\t{ if(n = _._clearInternal()) _._modifiedCount++; }\r\n\t\tfinally\r\n\t\t{ _._updateRecursion--; }\r\n\r\n\t\t_._signalModification();\r\n\r\n\t\treturn n;\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._clearInternal();\r\n\t\tthis._version = 0;\r\n\t\tthis._updateRecursion = 0;\r\n\t\tthis._modifiedCount = 0;\r\n\t\tconst l = this._linq;\r\n\t\tthis._linq = void 0;\r\n\t\tif(l) l.dispose();\r\n\t}\r\n\r\n\tprotected _importEntries(entries:IEnumerableOrArray<T>|IEnumerator<T>|null|undefined):number\r\n\t{\r\n\t\tlet added = 0;\r\n\t\tif(entries)\r\n\t\t{\r\n\t\t\tif((entries) instanceof (Array))\r\n\t\t\t{\r\n\t\t\t\t// Optimize for avoiding a new closure.\r\n\t\t\t\tfor(let e of entries)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this._addInternal(e)) added++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tforEach(entries, e =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this._addInternal(e)) added++;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn added;\r\n\t}\r\n\r\n\t/**\r\n\t * Safely imports any array enumerator, or enumerable.\r\n\t * @param entries\r\n\t * @returns {number}\r\n\t */\r\n\timportEntries(entries:IEnumerableOrArray<T>|IEnumerator<T>):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(!entries) return 0;\r\n\t\t_.assertModifiable();\r\n\t\t_._updateRecursion++;\r\n\r\n\t\tlet n:number = NaN;\r\n\t\ttry\r\n\t\t{ if(n = _._importEntries(entries)) _._modifiedCount++; }\r\n\t\tfinally\r\n\t\t{ _._updateRecursion--; }\r\n\r\n\t\t_._signalModification();\r\n\t\treturn n;\r\n\t}\r\n\r\n\t// Fundamentally the most important part of the collection.\r\n\r\n\t/**\r\n\t * Returns a enumerator for this collection.\r\n\t */\r\n\tabstract getEnumerator():IEnumerator<T>;\r\n\r\n\t/**\r\n\t * Returns an array filtered by the provided predicate.\r\n\t * Provided for similarity to JS Array.\r\n\t * @param predicate\r\n\t * @returns {T[]}\r\n\t */\r\n\tfilter(predicate:PredicateWithIndex<T>):T[]\r\n\t{\r\n\t\tif(!predicate) throw new ArgumentNullException('predicate');\r\n\t\tlet count = !this.getCount();\r\n\t\tlet result:T[] = [];\r\n\t\tif(count)\r\n\t\t{\r\n\t\t\tthis.forEach((e, i) =>\r\n\t\t\t{\r\n\t\t\t\tif(predicate(e, i))\r\n\t\t\t\t\tresult.push(e);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true the first time predicate returns true.  Otherwise false.\r\n\t * Useful for searching through a collection.\r\n\t * @param predicate\r\n\t * @returns {any}\r\n\t */\r\n\tany(predicate?:PredicateWithIndex<T>):boolean\r\n\t{\r\n\t\tlet count = this.getCount();\r\n\t\tif(!count) return false;\r\n\t\tif(!predicate) return Boolean(count);\r\n\r\n\t\tlet found:boolean = false;\r\n\t\tthis.forEach((e, i) => !(found = predicate(e, i)));\r\n\t\treturn found;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true the first time predicate returns true.  Otherwise false.\r\n\t * See '.any(predicate)'.  As this method is just just included to have similarity with a JS Array.\r\n\t * @param predicate\r\n\t * @returns {any}\r\n\t */\r\n\tsome(predicate?:PredicateWithIndex<T>):boolean\r\n\t{\r\n\t\treturn this.any(predicate);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns true if the equality comparer resolves true on any element in the collection.\r\n\t * @param entry\r\n\t * @returns {boolean}\r\n\t */\r\n\tcontains(entry:T):boolean\r\n\t{\r\n\t\tconst equals = this._equalityComparer;\r\n\t\treturn this.any(e => equals(entry, e));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Special implementation of 'forEach': If the action returns 'false' the enumeration will stop.\r\n\t * @param action\r\n\t * @param useCopy\r\n\t */\r\n\tforEach(action:ActionWithIndex<T>, useCopy?:boolean):number\r\n\tforEach(action:PredicateWithIndex<T>, useCopy?:boolean):number\r\n\tforEach(action:ActionWithIndex<T> | PredicateWithIndex<T>, useCopy?:boolean):number\r\n\t{\r\n\t\tif(this.wasDisposed)\r\n\t\t\treturn 0;\r\n\r\n\t\tif(useCopy)\r\n\t\t{\r\n\t\t\tconst a = this.toArray();\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\treturn forEach(a, action);\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\ta.length = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn forEach(this.getEnumerator(), action);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all values to numerically indexable object.\r\n\t * @param target\r\n\t * @param index\r\n\t * @returns {TTarget}\r\n\t */\r\n\tcopyTo<TTarget extends ArrayLikeWritable<T>>(\r\n\t\ttarget:TTarget,\r\n\t\tindex:number = 0):TTarget\r\n\t{\r\n\t\tif(!target) throw new ArgumentNullException('target');\r\n\r\n\t\tconst count = this.getCount();\r\n\t\tif(count)\r\n\t\t{\r\n\t\t\tconst newLength = count + index;\r\n\t\t\tif(target.length<newLength) target.length = newLength;\r\n\r\n\t\t\tconst e = this.getEnumerator();\r\n\t\t\twhile(e.moveNext()) // Disposes when finished.\r\n\t\t\t{\r\n\t\t\t\ttarget[index++] = <any>e.current;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of the collection contents.\r\n\t * @returns {any[]|Array}\r\n\t */\r\n\ttoArray():T[]\r\n\t{\r\n\t\tconst count = this.getCount();\r\n\t\treturn count\r\n\t\t\t? this.copyTo(count>65536 ? new Array<T>(count) : [])\r\n\t\t\t: [];\r\n\t}\r\n\r\n\tprivate _linq?:ILinqEnumerable<T>;\r\n\r\n\t/**\r\n\t * .linq will return an ILinqEnumerable if .linqAsync() has completed successfully or the default module loader is NodeJS+CommonJS.\r\n\t * @returns {ILinqEnumerable}\r\n\t */\r\n\tget linq():ILinqEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\tlet e = this._linq;\r\n\r\n\t\tif(!e)\r\n\t\t{\r\n\r\n\t\t\tlet r:any;\r\n\t\t\ttry { r = eval('require'); } catch (ex) {}\r\n\r\n\t\t\tthis._linq = e = r && r(LINQ_PATH).default.from(this);\r\n\t\t\tif(!e)\r\n\t\t\t{\r\n\t\t\t\tthrow isRequireJS\r\n\t\t\t\t\t? `using .linq to load and initialize a ILinqEnumerable is currently only supported within a NodeJS environment.\r\nImport System.Linq/Linq and use Enumerable.from(e) instead.\r\nYou can also preload the Linq module as a dependency or use .linqAsync(callback) for AMD/RequireJS.`\r\n\t\t\t\t\t: \"There was a problem importing System.Linq/Linq\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn e;\r\n\t}\r\n\r\n\t/**\r\n\t * .linqAsync() is for use with deferred loading.\r\n\t * Ensures an instance of the Linq extensions is available and then passes it to the callback.\r\n\t * Returns an ILinqEnumerable if one is already available, otherwise undefined.\r\n\t * Passing no parameters will still initiate loading and initializing the ILinqEnumerable which can be useful for pre-loading.\r\n\t * Any call to .linqAsync() where an ILinqEnumerable is returned can be assured that any subsequent calls to .linq will return the same instance.\r\n\t * @param callback\r\n\t * @returns {ILinqEnumerable}\r\n\t */\r\n\tlinqAsync(callback?:Action<ILinqEnumerable<T>>):ILinqEnumerable<T>|undefined\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\tlet e = this._linq;\r\n\r\n\t\tif(!e)\r\n\t\t{\r\n\t\t\tif(isRequireJS)\r\n\t\t\t{\r\n\t\t\t\teval(\"require\")([LINQ_PATH], (linq:any) =>\r\n\t\t\t\t{\r\n\t\t\t\t\t// Could end up being called more than once, be sure to check for ._linq before setting...\r\n\t\t\t\t\te = this._linq;\r\n\t\t\t\t\tif(!e) this._linq = e = linq.default.from(this);\r\n\t\t\t\t\tif(!e) throw \"There was a problem importing System.Linq/Linq\";\r\n\t\t\t\t\tif(callback) callback(e);\r\n\t\t\t\t\tcallback = void 0; // In case this is return synchronously..\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(isNodeJS && isCommonJS)\r\n\t\t\t{\r\n\t\t\t\te = this.linq;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow \"Cannot find a compatible loader for importing System.Linq/Linq\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(e && callback) callback(e);\r\n\r\n\t\treturn e;\r\n\t}\r\n}\r\n"]}