{"version":3,"sources":["System/Collections/Dictionaries/OrderedStringKeyDictionary.ts"],"names":[],"mappings":"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","file":"OrderedStringKeyDictionary.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {StringKeyDictionary} from \"./StringKeyDictionary\";\r\nimport {ArgumentOutOfRangeException} from \"../../Exceptions/ArgumentOutOfRangeException\";\r\nimport {IOrderedDictionary} from \"./IDictionary\";\r\nimport {remove} from \"../Array/Utility\";\r\nimport __extendsImport from \"../../../extends\";\r\nimport {Integer} from \"../../Integer\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport class OrderedStringKeyDictionary<TValue>\r\nextends StringKeyDictionary<TValue> implements IOrderedDictionary<string, TValue>\r\n{\r\n\r\n\t// noinspection JSMismatchedCollectionQueryUpdate\r\n\tprivate _order:string[] = []; // Maintains indexes.\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tindexOfKey(key:string):number\r\n\t{\r\n\t\tconst o = this._order;\r\n\t\treturn o.length ? o.indexOf(key, 0) : -1;\r\n\t}\r\n\r\n\tgetValueByIndex(index:number):TValue\r\n\t{\r\n\t\tInteger.assertZeroOrGreater(index);\r\n\t\tconst o = this._order;\r\n\t\tif(index<o.length)\r\n\t\t\treturn this.getAssuredValue(o[index]);\r\n\r\n\t\tthrow new ArgumentOutOfRangeException('index',index);\r\n\t}\r\n\r\n\t// adding keepIndex allows for clearing a value while still retaining it's index.\r\n\tsetValue(key:string, value:TValue|undefined, keepIndex?:boolean):boolean\r\n\t{\r\n\t\t// TODO: This may be inefficient and could be improved.\r\n\t\tconst _ = this;\r\n\t\tlet exists = _.indexOfKey(key)!= -1;\r\n\t\tif(!exists && (value!==VOID0 || keepIndex))\r\n\t\t\t_._order.push(key);\r\n\t\telse if(exists && value===VOID0 && !keepIndex)\r\n\t\t\tremove(_._order, key);\r\n\r\n\t\treturn super.setValue(key, value);\r\n\t}\r\n\r\n\tsetByIndex(index:number, value:TValue|undefined):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst order = _._order;\r\n\t\tif(index<0)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is less than zero.');\r\n\t\tif(index>=order.length)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is greater than the count.');\r\n\t\treturn _.setValue(order[index], value);\r\n\t}\r\n\r\n\t// importValues([x,y,z]);\r\n\timportValues(values:TValue[]):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\treturn _.handleUpdate(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet changed:boolean = false;\r\n\t\t\t\tfor(let i = 0; i<values.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_.setByIndex(i, values[i]))\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn changed;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t// setValues(x,y,z);\r\n\tsetValues(...values:TValue[]):boolean\r\n\t{\r\n\t\treturn this.importValues(values);\r\n\t}\r\n\r\n\tremoveByIndex(index:number):boolean\r\n\t{\r\n\t\treturn this.setByIndex(index, VOID0);\r\n\t}\r\n\r\n\tprotected getKeys():string[]\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst o = _._order;\r\n\t\treturn o.length && o.filter(key=> _.containsKey(key)) || [];\r\n\t}\r\n\r\n}\r\n\r\nexport default OrderedStringKeyDictionary;\r\n"]}