{"version":3,"sources":["System/Collections/ReadOnlyCollectionBase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;YAOA,oCAAoC;YAC9B,SAAS,GAAG,iBAAe,CAAC;YAElC;gBACQ,0CAAiB;gBADzB;;gBAwCA,CAAC;gBAlCU,yCAAQ,GAAlB;oBAEC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACzB,CAAC;gBAES,8CAAa,GAAvB;oBAEC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAED,mCAAmC;gBACzB,6CAAY,GAAtB,UAAuB,KAAO;oBAE7B,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC;gBAED,mCAAmC;gBACzB,gDAAe,GAAzB,UAA0B,KAAO,EAAE,GAAW;oBAE7C,MAAM,CAAC,CAAC,CAAC;gBACV,CAAC;gBAES,+CAAc,GAAxB;oBAEC,MAAM,CAAC,CAAC,CAAC;gBACV,CAAC;gBAID,8CAAa,GAAb;oBAEC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC9B,CAAC;gBAEF,6BAAC;YAAD,CAxCA,AAwCC,CAvCO,+BAAc,GAuCrB;;iCAEc,sBAAsB;QAAC,CAAC","file":"ReadOnlyCollectionBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {CollectionBase} from \"./CollectionBase\";\r\nimport {IEnumerator} from \"./Enumeration/IEnumerator\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport abstract class ReadOnlyCollectionBase<T>\r\nextends CollectionBase<T>\r\n{\r\n\r\n\tprotected abstract _getCount():number;\r\n\r\n\tprotected getCount():number\r\n\t{\r\n\t\treturn this._getCount();\r\n\t}\r\n\r\n\tprotected getIsReadOnly():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\tprotected _addInternal(entry:T):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\tprotected _removeInternal(entry:T, max?:number):number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _clearInternal():number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected abstract _getEnumerator():IEnumerator<T>;\r\n\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\t\treturn this._getEnumerator();\r\n\t}\r\n\r\n}\r\n\r\nexport default ReadOnlyCollectionBase;"]}