{"version":3,"sources":["System/Collections/Enumeration/SimpleEnumerableBase.ts"],"names":[],"mappings":";;;;;;;;;;;YASM,KAAK,GAAa,KAAK,CAAC,CAAC;YAE/B;gBAMC;oBAEC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACd,CAAC;gBAED,sBAAI,yCAAO;yBAAX;wBAEC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACtB,CAAC;;;mBAAA;gBAID,sBAAI,6CAAW;yBAAf;wBACC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;oBAC5B,CAAC;;;mBAAA;gBAID,0CAAW,GAAX,UAAY,GAAa;oBACxB,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACpB,GAAG,CAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC;gBAGS,6CAAc,GAAxB;oBAEC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;oBACpB,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC,CAAC,CAAC;gBACV,CAAC;gBAED,wCAAS,GAAT;oBAEC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACtB,CAAC;gBAED,mCAAI,GAAJ;oBAEC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;0BACnB,IAAI,+BAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC;0BAC9C,+BAAc,CAAC,IAAI,CAAC;gBACxB,CAAC;gBAED,kCAAG,GAAH;oBACC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChB,CAAC;gBAID,wCAAQ,GAAR,UAAS,KAAU;oBAElB,IACA,CAAC;wBACA,MAAM,CAAC,KAAK,KAAG,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE;8BACxC,IAAI,+BAAc,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;8BACtC,+BAAc,CAAC,IAAI,CAAC;oBACxB,CAAC;4BAED,CAAC;wBACA,IAAI,CAAC,OAAO,EAAE,CAAC;oBAChB,CAAC;gBACF,CAAC;gBAED,oCAAK,GAAL;oBAEC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;gBACnB,CAAC;gBAED,sCAAO,GAAP;oBAEC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACd,CAAC;gBAES,2CAAY,GAAtB;oBAEC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;gBAC5B,CAAC;gBAED,sBAAI,2CAAS;yBAAb;wBAEC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;oBAC5B,CAAC;;;mBAAA;gBACF,2BAAC;YAAD,CA7FA,AA6FC,IAAA;;iCAEc,oBAAoB;QACnC,CAAC","file":"SimpleEnumerableBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {IIteratorResult} from \"./IIterator\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {Action} from \"../../FunctionTypes\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport abstract class SimpleEnumerableBase<T> implements IEnumerator<T>\r\n{\r\n\r\n\tprotected _current:T|undefined;\r\n\tprotected _index:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tget current():T|undefined\r\n\t{\r\n\t\treturn this._current;\r\n\t}\r\n\r\n\tprotected abstract _canMoveNext():boolean;\r\n\r\n\tget canMoveNext():boolean {\r\n\t\treturn this._canMoveNext();\r\n\t}\r\n\r\n\tabstract moveNext():boolean;\r\n\r\n\ttryMoveNext(out:Action<T>):boolean {\r\n\t\tif(this.moveNext()) {\r\n\t\t\tout(<T>this._current);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprotected incrementIndex():number\r\n\t{\r\n\t\tlet i = this._index;\r\n\t\tthis._index = i = isNaN(i) ? 0 : (i + 1);\r\n\t\treturn i;\r\n\t}\r\n\r\n\tnextValue():T|undefined\r\n\t{\r\n\t\tthis.moveNext();\r\n\t\treturn this._current;\r\n\t}\r\n\r\n\tnext():IIteratorResult<T>\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? new IteratorResult(this._current, this._index)\r\n\t\t\t: IteratorResult.Done;\r\n\t}\r\n\r\n\tend():void {\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t'return'():IIteratorResult<void>\r\n\t'return'<TReturn>(value:TReturn):IIteratorResult<TReturn>\r\n\t'return'(value?:any):IIteratorResult<any>\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\treturn value!==VOID0 && this._canMoveNext()\r\n\t\t\t\t? new IteratorResult(value, VOID0, true)\r\n\t\t\t\t: IteratorResult.Done;\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\tthis.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\treset():void\r\n\t{\r\n\t\tthis._current = VOID0;\r\n\t\tthis._index = NaN;\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tprotected getIsEndless():boolean\r\n\t{\r\n\t\treturn this._canMoveNext();\r\n\t}\r\n\r\n\tget isEndless():boolean|undefined\r\n\t{\r\n\t\treturn this.getIsEndless();\r\n\t}\r\n}\r\n\r\nexport default SimpleEnumerableBase;\r\n"]}