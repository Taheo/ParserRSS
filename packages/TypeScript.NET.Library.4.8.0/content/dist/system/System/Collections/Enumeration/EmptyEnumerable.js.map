{"version":3,"sources":["System/Collections/Enumeration/EmptyEnumerable.ts"],"names":[],"mappings":"AAAA;;;GAGG;;;;;;;;;;;8BAHH;;;eAGG;YAKH;gBAEC;oBACC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACxB,CAAC;gBAED,uCAAa,GAAb;oBACC,MAAM,CAAC,iCAAe,CAAC;gBACxB,CAAC;gBAMF,sBAAC;YAAD,CAdA,AAcC,IAAA;;QACD,CAAC","file":"EmptyEnumerable.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT\r\n */\r\n\r\nimport {IEnumerable} from \"./IEnumerable\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {EmptyEnumerator} from \"./EmptyEnumerator\";\r\nexport class EmptyEnumerable implements IEnumerable<any>{\r\n\r\n\tconstructor() {\r\n\t\tthis.isEndless = false;\r\n\t}\r\n\r\n\tgetEnumerator():IEnumerator<any> {\r\n\t\treturn EmptyEnumerator;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a way of flagging endless enumerations that may cause issues.\r\n\t */\r\n\treadonly isEndless:boolean;\r\n}\r\n"]}