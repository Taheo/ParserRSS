{"version":3,"sources":["System/Observable/ObservableNodeBase.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;;;;;8BALH;;;;;eAKG;YAMH,oCAAoC;YAC9B,SAAS,GAAG,iBAAe,CAAC;YAElC;gBACQ,sCAAiB;gBADzB;;gBAkBA,CAAC;gBAdA,mCAAM,GAAN,UAAO,KAAO;oBAEb,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC;gBAED,oCAAO,GAAP,UAAQ,KAAS;oBAEhB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACtB,CAAC;gBAED,wCAAW,GAAX;oBAEC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACrB,CAAC;gBACF,yBAAC;YAAD,CAlBA,AAkBC,CAjBO,wBAAc,GAiBrB;;iCAEc,kBAAkB;QAAC,CAAC","file":"ObservableNodeBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Based upon .NET source.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Source: http://referencesource.microsoft.com/#mscorlib/system/IObserver.cs\r\n */\r\n\r\n// Can be used as a base class, mixin, or simply reference on how to implement the pattern.\r\nimport ObservableBase from \"./ObservableBase\";\r\nimport {IObserver} from \"./IObserver\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport class ObservableNodeBase<T>\r\nextends ObservableBase<T> implements IObserver<T>\r\n{\r\n\r\n\tonNext(value:T):void\r\n\t{\r\n\t\tthis._onNext(value);\r\n\t}\r\n\r\n\tonError(error:any):void\r\n\t{\r\n\t\tthis._onError(error);\r\n\t}\r\n\r\n\tonCompleted():void\r\n\t{\r\n\t\tthis._onCompleted();\r\n\t}\r\n}\r\n\r\nexport default ObservableNodeBase;"]}