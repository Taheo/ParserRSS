{"version":3,"sources":["System/Disposable/ObjectDisposedException.ts"],"names":[],"mappings":";;;;;;;;;;;;;;YAQA,oCAAoC;YAC9B,SAAS,GAAG,iBAAe,CAAC;YAG5B,IAAI,GAAU,yBAAyB,CAAC;YAI9C;gBAA6C,2CAAyB;gBAKrE,+DAA+D;gBAC/D,iCACC,UAAiB,EACjB,OAAe,EACf,cAAqB;2BAErB,kBAAM,OAAO,IAAI,EAAE,EAAE,cAAc,EAAE,UAAC,CAAC;wBAEhC,CAAE,CAAC,UAAU,GAAG,UAAU,CAAC;oBAClC,CAAC,CAAC;gBACH,CAAC;gBAGS,yCAAO,GAAjB;oBAEC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAED,0CAAQ,GAAR;oBAEC,IAAM,CAAC,GAAG,IAAI,CAAC;oBACf,IAAI,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC;oBACzB,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBAE1C,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;gBACtD,CAAC;gBAEM,uCAAe,GAAtB,UACC,UAA2B,EAC3B,UAAiB,EACjB,OAAe;oBAEf,EAAE,CAAA,CAAC,UAAU,CAAC,WAAW,CAAC;wBACzB,MAAM,IAAI,uBAAuB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;oBACxD,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAEF,8BAAC;YAAD,CA1CA,AA0CC,CA1C4C,qDAAyB,GA0CrE;;iCAEc,uBAAuB;QAAC,CAAC","file":"ObjectDisposedException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\nimport {InvalidOperationException, Error} from \"../Exceptions/InvalidOperationException\";\r\nimport {IDisposableAware} from \"./IDisposableAware\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\nconst NAME:string = 'ObjectDisposedException';\r\n\r\nexport {Error};\r\n\r\nexport class ObjectDisposedException extends InvalidOperationException\r\n{\r\n\r\n\treadonly objectName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tobjectName:string,\r\n\t\tmessage?:string,\r\n\t\tinnerException?:Error)\r\n\t{\r\n\t\tsuper(message || '', innerException, (_)=>\r\n\t\t{\r\n\t\t\t(<any>_).objectName = objectName;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet oName = _.objectName;\r\n\t\toName = oName ? ('{' + oName + '} ') : '';\r\n\r\n\t\treturn '[' + _.name + ': ' + oName + _.message + ']';\r\n\t}\r\n\r\n\tstatic throwIfDisposed(\r\n\t\tdisposable:IDisposableAware,\r\n\t\tobjectName:string,\r\n\t\tmessage?:string):true|never\r\n\t{\r\n\t\tif(disposable.wasDisposed)\r\n\t\t\tthrow new ObjectDisposedException(objectName, message);\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n\r\nexport default ObjectDisposedException;"]}