{"version":3,"sources":["System/Text/Padding.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAC,MAAM,UAAU,CAAC;AAC9B,OAAO,EAAC,MAAM,EAAE,KAAK,EAAC,MAAM,WAAW,CAAC;AAExC,MAAM,KAAK,GAAG,GAAG,CAAC;AAClB,MAAM,IAAI,GAAG,GAAG,CAAC;AAEjB,MAAM,wBAAwB,MAAa,EAAE,SAAgB,EAAE,MAAa,KAAK;IAEhF,MAAM,CAAC,GAAG,IAAI,SAAS,GAAC,CAAC;UACtB,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;UACjD,MAAM,CAAC;AACX,CAAC;AAED,MAAM,yBAAyB,MAAa,EAAE,SAAgB,EAAE,MAAa,KAAK;IAEjF,MAAM,CAAC,GAAG,IAAI,SAAS,GAAC,CAAC;UACtB,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;UACjD,MAAM,CAAC;AACX,CAAC;AAED,MAAM,wBAAwB,MAAa,EAAE,SAAgB,EAAE,MAAoB,IAAI;IAEtF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAE3C,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC;QAAC,MAAM,GAAG,CAAC,CAAC;IAEvB,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,EAAE,SAAS,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;AAC9D,CAAC;AAGD,MAAM,yBAAyB,MAAa,EAAE,SAAgB,EAAE,MAAoB,IAAI;IAEvF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAE3C,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC;QAAC,MAAM,GAAG,CAAC,CAAC;IAEvB,MAAM,CAAC,cAAc,CAAC,MAAM,GAAG,KAAK,EAAE,SAAS,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;AAC/D,CAAC;AAID,MAAM,kBAAkB,MAAoB,EAAE,SAAgB,EAAE,GAAQ;IAEvE,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACvE,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IAC7E,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;AACzC,CAAC;AAID,MAAM,mBAAmB,MAAoB,EAAE,SAAgB,EAAE,GAAQ;IAExE,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACxE,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAAC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IAC9E,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;AACzC,CAAC","file":"Padding.js","sourcesContent":["import {Type} from \"../Types\";\r\nimport {repeat, EMPTY} from \"./Utility\";\r\n\r\nconst SPACE = ' ';\r\nconst ZERO = '0';\r\n\r\nexport function padStringLeft(source:string, minLength:number, pad:string = SPACE):string\r\n{\r\n\treturn pad && minLength>0\r\n\t\t? (repeat(pad, minLength - source.length) + source)\r\n\t\t: source;\r\n}\r\n\r\nexport function padStringRight(source:string, minLength:number, pad:string = SPACE):string\r\n{\r\n\treturn pad && minLength>0\r\n\t\t? (source + repeat(pad, minLength - source.length))\r\n\t\t: source;\r\n}\r\n\r\nexport function padNumberLeft(source:number, minLength:number, pad:string|number = ZERO):string\r\n{\r\n\tif(!Type.isNumber(source, true))\r\n\t\tthrow new Error(\"Cannot pad non-number.\");\r\n\r\n\tif(!source) source = 0;\r\n\r\n\treturn padStringLeft(source + EMPTY, minLength, pad + EMPTY);\r\n}\r\n\r\n\r\nexport function padNumberRight(source:number, minLength:number, pad:string|number = ZERO):string\r\n{\r\n\tif(!Type.isNumber(source, true))\r\n\t\tthrow new Error(\"Cannot pad non-number.\");\r\n\r\n\tif(!source) source = 0;\r\n\r\n\treturn padStringRight(source + EMPTY, minLength, pad + EMPTY);\r\n}\r\n\r\nexport function padLeft(source:string, minLength:number, pad?:string):string\r\nexport function padLeft(source:number, minLength:number, pad?:string|number):string\r\nexport function padLeft(source:string|number, minLength:number, pad?:any):string\r\n{\r\n\tif(Type.isString(source)) return padStringLeft(source, minLength, pad);\r\n\tif(Type.isNumber(source, true)) return padNumberLeft(source, minLength, pad);\r\n\tthrow new Error(\"Invalid source type.\");\r\n}\r\n\r\nexport function padRight(source:string, minLength:number, pad?:string):string\r\nexport function padRight(source:number, minLength:number, pad?:string|number):string\r\nexport function padRight(source:string|number, minLength:number, pad?:any):string\r\n{\r\n\tif(Type.isString(source)) return padStringRight(source, minLength, pad);\r\n\tif(Type.isNumber(source, true)) return padNumberRight(source, minLength, pad);\r\n\tthrow new Error(\"Invalid source type.\");\r\n}"]}