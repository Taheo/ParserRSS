{"version":3,"sources":["System/Diagnostics/Stopwatch.ts"],"names":[],"mappings":"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","file":"Stopwatch.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {TimeSpan} from \"../Time/TimeSpan\";\r\nimport {ITimer} from \"../Timers/ITimer\";\r\n\r\nfunction getTimestampMilliseconds():number\r\n{\r\n\treturn (new Date()).getTime();\r\n}\r\n\r\nexport default\r\nclass Stopwatch implements ITimer\r\n{\r\n\r\n\tstatic getTimestampMilliseconds():number\r\n\t{\r\n\t\treturn getTimestampMilliseconds();\r\n\t}\r\n\r\n\tprivate _elapsed:number;\r\n\tprivate _startTimeStamp:number;\r\n\r\n\tprivate _isRunning:boolean;\r\n\tget isRunning():boolean\r\n\t{\r\n\t\treturn this._isRunning;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tstatic startNew():Stopwatch\r\n\t{\r\n\t\tconst s = new Stopwatch();\r\n\t\ts.start();\r\n\t\treturn s;\r\n\t}\r\n\r\n\tstatic measure(closure:()=>void):TimeSpan\r\n\t{\r\n\t\tconst start = getTimestampMilliseconds();\r\n\t\tclosure();\r\n\t\treturn new TimeSpan(getTimestampMilliseconds() - start);\r\n\t}\r\n\r\n\tstart():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(!_._isRunning)\r\n\t\t{\r\n\t\t\t_._startTimeStamp = getTimestampMilliseconds();\r\n\t\t\t_._isRunning = true;\r\n\t\t}\r\n\t}\r\n\r\n\tstop():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(_._isRunning)\r\n\t\t{\r\n\t\t\t_._elapsed += _.currentLapMilliseconds;\r\n\t\t\t_._isRunning = false;\r\n\t\t}\r\n\t}\r\n\r\n\treset():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_._elapsed = 0;\r\n\t\t_._isRunning = false;\r\n\t\t_._startTimeStamp = NaN;\r\n\t}\r\n\r\n\t// Effectively calls a stop start and continues timing...\r\n\t// Can also be called to effectively start a lap before calling it again to get the elapsed lap time.\r\n\tlap():TimeSpan\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tif(_._isRunning)\r\n\t\t{\r\n\t\t\tconst t = getTimestampMilliseconds();\r\n\t\t\tconst s = _._startTimeStamp;\r\n\t\t\tconst e = t - s;\r\n\t\t\t_._startTimeStamp = t;\r\n\t\t\t_._elapsed += e;\r\n\t\t\treturn new TimeSpan(e);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn TimeSpan.zero;\r\n\t}\r\n\r\n\tget currentLapMilliseconds():number\r\n\t{\r\n\t\treturn this._isRunning\r\n\t\t\t? (getTimestampMilliseconds() - this._startTimeStamp)\r\n\t\t\t: 0;\r\n\t}\r\n\r\n\tget currentLap():TimeSpan\r\n\t{\r\n\t\treturn this._isRunning\r\n\t\t\t? new TimeSpan(this.currentLapMilliseconds)\r\n\t\t\t: TimeSpan.zero;\r\n\t}\r\n\r\n\tget elapsedMilliseconds():number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet timeElapsed = _._elapsed;\r\n\r\n\t\tif(_._isRunning)\r\n\t\t\ttimeElapsed += _.currentLapMilliseconds;\r\n\r\n\t\treturn timeElapsed;\r\n\t}\r\n\r\n\tget elapsed():TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(this.elapsedMilliseconds);\r\n\t}\r\n\r\n}\r\n"]}