{"version":3,"sources":["System/Exceptions/ArgumentException.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,OAAO,EAAC,eAAe,EAAQ,MAAM,mBAAmB,CAAC;AACzD,OAAO,EAAC,IAAI,EAAC,MAAM,iBAAiB,CAAC;AAErC,oCAAoC;AAGpC,MAAM,IAAI,GAAU,mBAAmB,CAAC;AAIxC,MAAM,wBAAyB,SAAQ,eAAe;IAKrD,+DAA+D;IAC/D,YACC,SAAgB,EAChB,OAAe,EACf,cAAqB,EACrB,aAA6B;QAE7B,IAAI,EAAE,GAAG,SAAS,GAAG,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACnD,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;YAEnD,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;YACxB,EAAE,CAAA,CAAC,aAAa,CAAC;gBAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACJ,CAAC;IAGS,OAAO;QAEhB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;CAED;AAED,eAAe,iBAAiB,CAAC","file":"ArgumentException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\nimport {SystemException, Error} from \"./SystemException\";\r\nimport {trim} from \"../Text/Utility\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'ArgumentException';\r\n\r\nexport {Error};\r\n\r\nexport class ArgumentException extends SystemException\r\n{\r\n\r\n\tparamName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tmessage?:string,\r\n\t\tinnerException?:Error,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tlet pn = paramName ? ('{' + paramName + '} ') : '';\r\n\t\tsuper(trim(pn + (message || '')), innerException, (_)=>\r\n\t\t{\r\n\t\t\t_.paramName = paramName;\r\n\t\t\tif(beforeSealing) beforeSealing(_);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default ArgumentException;"]}