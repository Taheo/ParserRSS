{"version":3,"sources":["System/Collections/Sorting/KeySortedContext.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,KAAK,MAAM,MAAM,eAAe,CAAC;AACxC,OAAO,EAAC,WAAW,EAAC,MAAM,eAAe,CAAC;AAC1C,OAAO,EAAC,SAAS,EAAC,MAAM,iBAAiB,CAAC;AAM1C,oCAAoC;AAGpC,MAAM,uBAAoD,SAAQ,WAAc;IAE/E,YACC,IAAsB,EACZ,YAAkC,EAC5C,QAAc,iBAAe,EAC7B,WAAyB,MAAM,CAAC,OAAO;QAEvC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAJnB,iBAAY,GAAZ,YAAY,CAAsB;IAK7C,CAAC;IAED,OAAO,CAAC,CAAG,EAAE,CAAG;QAEf,MAAM,CAAC,GAAG,IAAI,CAAC;QACf,IAAI,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC;QACxB,EAAE,CAAA,CAAC,CAAC,EAAE,IAAI,EAAE,IAAE,SAAS,CAAC,QAAQ,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,sEAAsE;QACtE,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAM,EAAE,CAAC,CAAC,CAAC,EAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,EAAE,CAAA,CAAC,CAAC,IAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC;IACnB,CAAC;CACD;AAED,eAAe,gBAAgB,CAAC","file":"KeySortedContext.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport * as Values from \"../../Compare\";\r\nimport {SortContext} from \"./SortContext\";\r\nimport {Functions} from \"../../Functions\";\r\nimport {Comparison, Selector} from \"../../FunctionTypes\";\r\nimport {Comparable} from \"../../IComparable\";\r\nimport {IComparer} from \"../../IComparer\";\r\nimport {Order} from \"./Order\";\r\nimport __extendsImport from \"../../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport class KeySortedContext<T, TKey extends Comparable> extends SortContext<T>\r\n{\r\n\tconstructor(\r\n\t\tnext:IComparer<T>|null,\r\n\t\tprotected _keySelector:Selector<T,TKey>|null,\r\n\t\torder:Order = Order.Ascending,\r\n\t\tcomparer:Comparison<T> = Values.compare)\r\n\t{\r\n\t\tsuper(next, comparer, order);\r\n\t}\r\n\r\n\tcompare(a:T, b:T):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet ks = _._keySelector;\r\n\t\tif(!ks || ks==Functions.Identity) return super.compare(a, b);\r\n\t\t// We force <any> here since it can be a Primitive or IComparable<any>\r\n\t\tconst d = Values.compare(<any>ks(a), <any>ks(b));\r\n\t\tif(d==0 && _._next) return _._next.compare(a, b);\r\n\t\treturn _._order*d;\r\n\t}\r\n}\r\n\r\nexport default KeySortedContext;"]}