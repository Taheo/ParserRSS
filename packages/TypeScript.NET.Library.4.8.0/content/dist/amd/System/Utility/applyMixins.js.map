{"version":3,"sources":["System/Utility/applyMixins.js","System/Utility/applyMixins.ts"],"names":["define","require","exports","applyMixins","derivedConstructor","baseConstructors","forEach","bc","Object","getOwnPropertyNames","prototype","name","defineProperty","value"],"mappings":";;;;AAIAA,QAAQ,UAAW,WAAY,SAAUC,EAASC,GAC9C,YCAJ,SAAAC,GAAoCC,EAAwBC,GAE3DA,EACEC,QACA,SAAAC,GAECC,OAAOC,oBAAoBF,EAAGG,WAAWJ,QACxC,SAAAK,GAECP,EAAmBM,UAAUC,GAAQJ,EAAGG,UAAUC,ODRpDH,OAAOI,eAAeV,EAAS,cAAgBW,OAAO,ICD1DX,EAAAA,WAAAC","file":"applyMixins.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\ndefine([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function applyMixins(derivedConstructor, baseConstructors) {\n        baseConstructors\n            .forEach(function (bc) {\n            Object.getOwnPropertyNames(bc.prototype).forEach(function (name) {\n                derivedConstructor.prototype[name] = bc.prototype[name];\n            });\n        });\n    }\n    exports.default = applyMixins;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nexport default function applyMixins(derivedConstructor:any, baseConstructors:any[]):void\r\n{\r\n\tbaseConstructors\r\n\t\t.forEach(\r\n\t\t\tbc =>\r\n\t\t\t{\r\n\t\t\t\tObject.getOwnPropertyNames(bc.prototype).forEach(\r\n\t\t\t\t\tname =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tderivedConstructor.prototype[name] = bc.prototype[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n}\r\n"]}