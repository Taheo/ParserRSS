{"version":3,"sources":["System/Exceptions/ArgumentOutOfRangeException.js","System/Exceptions/ArgumentOutOfRangeException.ts"],"names":["define","require","exports","ArgumentException_1","extends_1","Object","defineProperty","value","__extends","NAME","ArgumentOutOfRangeException","_super","paramName","actualValue","message","innerException","call","this","_","prototype","getName","ArgumentException"],"mappings":"AAAAA,QAAQ,UAAW,UAAW,sBAAuB,iBAAkB,SAAUC,EAASC,EAASC,EAAqBC,GACpH,YACAC,QAAOC,eAAeJ,EAAS,cAAgBK,OAAO,GCO1D,IAAMC,GAAYJ,EAAAA,WAEZK,EAAc,8BAIpBC,EAAA,SAAAC,GAIC,QAAAD,GACCE,EACAC,EACAC,EACAC,GDbU,MCYV,UAAAD,IAAAA,EAAA,KAGAH,EAAAK,KAAAC,KAAML,EAAW,IAAIC,EAAW,KAAOC,EAASC,EAAgB,SAACG,GAEhEA,EAAEL,YAAcA,KACfI,KASJ,MAtBiDT,GAAAE,EAAAC,GAiBtCD,EAAAS,UAAAC,QAAV,WAEC,MAAOX,IAGTC,GAtBiDP,EAAAkB,kBAApCnB,GAAAQ,4BAAAA,EAwBbR,EAAAA,WAAeQ","file":"ArgumentOutOfRangeException.js","sourcesContent":["define([\"require\", \"exports\", \"./ArgumentException\", \"../../extends\"], function (require, exports, ArgumentException_1, extends_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    // noinspection JSUnusedLocalSymbols\n    var __extends = extends_1.default;\n    var NAME = 'ArgumentOutOfRangeException';\n    var ArgumentOutOfRangeException = (function (_super) {\n        __extends(ArgumentOutOfRangeException, _super);\n        function ArgumentOutOfRangeException(paramName, actualValue, message, innerException) {\n            if (message === void 0) { message = ' '; }\n            return _super.call(this, paramName, \"(\" + actualValue + \") \" + message, innerException, function (_) {\n                _.actualValue = actualValue;\n            }) || this;\n        }\n        ArgumentOutOfRangeException.prototype.getName = function () {\n            return NAME;\n        };\n        return ArgumentOutOfRangeException;\n    }(ArgumentException_1.ArgumentException));\n    exports.ArgumentOutOfRangeException = ArgumentOutOfRangeException;\n    exports.default = ArgumentOutOfRangeException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\nimport {ArgumentException, Error} from \"./ArgumentException\";\r\nimport {Primitive} from \"../Primitive\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst NAME:string = 'ArgumentOutOfRangeException';\r\n\r\nexport {Error};\r\n\r\nexport class ArgumentOutOfRangeException extends ArgumentException\r\n{\r\n\tactualValue:Primitive | null | undefined;\r\n\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tactualValue:Primitive | null | undefined,\r\n\t\tmessage:string = ' ',\r\n\t\tinnerException?:Error)\r\n\t{\r\n\t\tsuper(paramName, `(${actualValue}) ` + message, innerException, (_)=>\r\n\t\t{\r\n\t\t\t_.actualValue = actualValue;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n\r\nexport default ArgumentOutOfRangeException;"]}