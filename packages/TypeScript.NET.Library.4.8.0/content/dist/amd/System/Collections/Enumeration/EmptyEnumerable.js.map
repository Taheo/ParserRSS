{"version":3,"sources":["System/Collections/Enumeration/EmptyEnumerable.js","System/Collections/Enumeration/EmptyEnumerable.ts"],"names":["define","require","exports","EmptyEnumerator_1","Object","defineProperty","value","EmptyEnumerable","this","isEndless","prototype","getEnumerator","EmptyEnumerator"],"mappings":";;;;AAIAA,QAAQ,UAAW,UAAW,qBAAsB,SAAUC,EAASC,EAASC,GAC5E,YACAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GCE1D,IAAAC,GAAA,WAEC,QAAAA,KACCC,KAAKC,WAAY,EAWnB,MARCF,GAAAG,UAAAC,cAAA,WACC,MAAOR,GAAAS,iBAOTL,IAdaL,GAAAK,gBAAAA","file":"EmptyEnumerable.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT\n */\ndefine([\"require\", \"exports\", \"./EmptyEnumerator\"], function (require, exports, EmptyEnumerator_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var EmptyEnumerable = (function () {\n        function EmptyEnumerable() {\n            this.isEndless = false;\n        }\n        EmptyEnumerable.prototype.getEnumerator = function () {\n            return EmptyEnumerator_1.EmptyEnumerator;\n        };\n        return EmptyEnumerable;\n    }());\n    exports.EmptyEnumerable = EmptyEnumerable;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT\r\n */\r\n\r\nimport {IEnumerable} from \"./IEnumerable\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {EmptyEnumerator} from \"./EmptyEnumerator\";\r\nexport class EmptyEnumerable implements IEnumerable<any>{\r\n\r\n\tconstructor() {\r\n\t\tthis.isEndless = false;\r\n\t}\r\n\r\n\tgetEnumerator():IEnumerator<any> {\r\n\t\treturn EmptyEnumerator;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a way of flagging endless enumerations that may cause issues.\r\n\t */\r\n\treadonly isEndless:boolean;\r\n}\r\n"]}