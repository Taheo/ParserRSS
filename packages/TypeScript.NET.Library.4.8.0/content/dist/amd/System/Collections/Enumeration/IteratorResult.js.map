{"version":3,"sources":["System/Collections/Enumeration/IteratorResult.js","System/Collections/Enumeration/IteratorResult.ts"],"names":["define","require","exports","Object","defineProperty","value","VOID0","IteratorResult","index","done","this","freeze","GetDone","Done"],"mappings":"AAAAA,QAAQ,UAAW,WAAY,SAAUC,EAASC,GAC9C,YACAC,QAAOC,eAAeF,EAAS,cAAgBG,OAAO,GCI1D,IAAMC,GAAkB,OAExBC,EAAA,WAaC,QAAAA,GACCF,EACAG,EACAC,GAAA,SAAAA,IAAAA,GAAA,GAEAC,KAAKL,MAAQA,EACI,iBAAPG,GACTE,KAAKD,KAAOD,GAGZE,KAAKF,MAAQA,EACbE,KAAKD,KAAOA,GAEbN,OAAOQ,OAAOD,MAEhB,MAAAH,KA5BaL,GAAAK,eAAAA,EA8Bb,SAAcA,GAIb,QAAAK,KAAgD,MAAOL,GAAAM,KAF1CN,EAAAM,KAA2B,GAAIN,GAAoBD,EAAOA,IAAO,IAE9DC,EAAAK,QAAOA,GAJVL,EAAAL,EAAAK,iBAAAL,EAAAK,oBA9BDL,EAAAK,eAAAA,EAqCbJ,OAAOQ,OAAOJ,GAEdL,EAAAA,WAAeK","file":"IteratorResult.js","sourcesContent":["define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var VOID0 = void 0;\n    var IteratorResult = (function () {\n        function IteratorResult(value, index, done) {\n            if (done === void 0) { done = false; }\n            this.value = value;\n            if (typeof index == 'boolean')\n                this.done = index;\n            else {\n                this.index = index;\n                this.done = done;\n            }\n            Object.freeze(this);\n        }\n        return IteratorResult;\n    }());\n    exports.IteratorResult = IteratorResult;\n    (function (IteratorResult) {\n        IteratorResult.Done = new IteratorResult(VOID0, VOID0, true);\n        function GetDone() { return IteratorResult.Done; }\n        IteratorResult.GetDone = GetDone;\n    })(IteratorResult = exports.IteratorResult || (exports.IteratorResult = {}));\n    exports.IteratorResult = IteratorResult;\n    Object.freeze(IteratorResult);\n    exports.default = IteratorResult;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {IIteratorResult} from \"./IIterator\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport class IteratorResult<T> implements IIteratorResult<T>\r\n{\r\n\tpublic readonly value:T;\r\n\tpublic readonly index?:number;\r\n\tpublic readonly done:boolean;\r\n\r\n\tconstructor(\r\n\t\tvalue:T,\r\n\t\tdone:boolean)\r\n\tconstructor(\r\n\t\tvalue:T,\r\n\t\tindex?:number,\r\n\t\tdone?:boolean)\r\n\tconstructor(\r\n\t\tvalue:T,\r\n\t\tindex?:number|boolean,\r\n\t\tdone:boolean = false)\r\n\t{\r\n\t\tthis.value = value;\r\n\t\tif(typeof index=='boolean')\r\n\t\t\tthis.done = index;\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.done = done;\r\n\t\t}\r\n\t\tObject.freeze(this);\r\n\t}\r\n}\r\n\r\nexport module IteratorResult\r\n{\r\n\texport const Done:IteratorResult<any> = new IteratorResult<any>(VOID0, VOID0, true);\r\n\r\n\texport function GetDone():IteratorResult<any> { return Done; }\r\n}\r\n\r\nObject.freeze(IteratorResult);\r\n\r\nexport default IteratorResult;"]}