{"version":3,"sources":["System/Collections/Enumeration/EmptyEnumerator.js","System/Collections/Enumeration/EmptyEnumerator.ts"],"names":["define","require","exports","IteratorResult_1","Functions_1","Object","defineProperty","value","VOID0","EmptyEnumerator","freeze","current","moveNext","Functions","False","tryMoveNext","nextValue","Blank","next","IteratorResult","GetDone","return","end","reset","dispose","isEndless"],"mappings":";;;;AAIAA,QAAQ,UAAW,UAAW,mBAAoB,mBAAoB,SAAUC,EAASC,EAASC,EAAkBC,GAChH,YACAC,QAAOC,eAAeJ,EAAS,cAAgBK,OAAO,GCI1D,IAAMC,GAAkB,MAQXN,GAAAO,gBAAmCJ,OAAOK,QACtDC,QAASH,EACTI,SAAUR,EAAAS,UAAUC,MACpBC,YAAaX,EAAAS,UAAUC,MACvBE,UAAWZ,EAAAS,UAAUI,MACrBC,KAAMf,EAAAgB,eAAeC,QACrBC,SAAUlB,EAAAgB,eAAeC,QACzBE,IAAKlB,EAAAS,UAAUI,MACfM,MAAOnB,EAAAS,UAAUI,MACjBO,QAASpB,EAAAS,UAAUI,MACnBQ,WAAW,IAEZvB,EAAAA,WAAeA,EAAAO","file":"EmptyEnumerator.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\ndefine([\"require\", \"exports\", \"./IteratorResult\", \"../../Functions\"], function (require, exports, IteratorResult_1, Functions_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var VOID0 = void 0;\n    /**\n     * A simplified stripped down enumerable that is always complete and has no results.\n     * Frozen and exported as 'empty' to allow for reuse.\n     */\n    exports.EmptyEnumerator = Object.freeze({\n        current: VOID0,\n        moveNext: Functions_1.Functions.False,\n        tryMoveNext: Functions_1.Functions.False,\n        nextValue: Functions_1.Functions.Blank,\n        next: IteratorResult_1.IteratorResult.GetDone,\n        \"return\": IteratorResult_1.IteratorResult.GetDone,\n        end: Functions_1.Functions.Blank,\n        reset: Functions_1.Functions.Blank,\n        dispose: Functions_1.Functions.Blank,\n        isEndless: false\n    });\n    exports.default = exports.EmptyEnumerator;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport {Functions} from \"../../Functions\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\n\r\n/**\r\n * A simplified stripped down enumerable that is always complete and has no results.\r\n * Frozen and exported as 'empty' to allow for reuse.\r\n */\r\n\r\nexport const EmptyEnumerator:IEnumerator<any> = Object.freeze({\r\n\tcurrent: VOID0,\r\n\tmoveNext: Functions.False,\r\n\ttryMoveNext: Functions.False,\r\n\tnextValue: Functions.Blank,\r\n\tnext: IteratorResult.GetDone,\r\n\t\"return\": IteratorResult.GetDone,\r\n\tend: Functions.Blank,\r\n\treset: Functions.Blank,\r\n\tdispose: Functions.Blank,\r\n\tisEndless: false\r\n});\r\nexport default EmptyEnumerator;"]}