{"version":3,"sources":["System/Collections/Array/Sorting/insertionSort.js","System/Collections/Array/Sorting/insertionSort.ts"],"names":["define","require","exports","ArgumentNullException_1","insertionSort","target","ArgumentNullException","len","length","i","j","j1","swap","Object","defineProperty","value"],"mappings":"AAAAA,QAAQ,UAAW,UAAW,6CAA8C,SAAUC,EAASC,EAASC,GACpG,YCYJ,SAAAC,GAAwFC,GAEvF,IAAIA,EAAQ,KAAM,IAAIF,GAAAG,sBAAsB,SAG5C,KAAI,GAFEC,GAAMF,EAAOG,OAEXC,EAAI,EAAGA,EAAEF,EAAKE,IAIrB,IAFA,GAAIC,GAAID,EAAGE,EAAE,OAEPD,EAAE,GAAKL,EAAQM,EAAKD,EAAI,GAAIL,EAAOK,IACzC,CACC,GAAIE,GAAOP,EAAOK,EAClBL,GAAOK,GAAKL,EAAOM,GACnBN,EAAOM,GAAMC,EACbF,IAIF,MAAOL,GD7BJQ,OAAOC,eAAeZ,EAAS,cAAgBa,OAAO,ICW1Db,EAAAE,cAAAA","file":"insertionSort.js","sourcesContent":["define([\"require\", \"exports\", \"../../../Exceptions/ArgumentNullException\"], function (require, exports, ArgumentNullException_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * https://en.wikipedia.org/wiki/Insertion_sort\n     * @param target\n     * @returns {T[]}\n     */\n    function insertionSort(target) {\n        if (!target)\n            throw new ArgumentNullException_1.ArgumentNullException(\"target\");\n        var len = target.length;\n        for (var i = 1; i < len; i++) {\n            var j = i, j1 = void 0;\n            while (j > 0 && target[(j1 = j - 1)] > target[j]) {\n                var swap = target[j];\n                target[j] = target[j1];\n                target[j1] = swap;\n                j--;\n            }\n        }\n        return target;\n    }\n    exports.insertionSort = insertionSort;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\nimport {Primitive} from \"../../../Primitive\";\r\nimport {ArgumentNullException} from \"../../../Exceptions/ArgumentNullException\";\r\nimport {ArrayLikeWritable} from \"../ArrayLikeWritable\";\r\n\r\n/**\r\n * https://en.wikipedia.org/wiki/Insertion_sort\r\n * @param target\r\n * @returns {T[]}\r\n */\r\nexport function insertionSort<T extends Primitive, TArray extends ArrayLikeWritable<T>>(target:TArray):TArray\r\n{\r\n\tif(!target) throw new ArgumentNullException(\"target\");\r\n\tconst len = target.length;\r\n\r\n\tfor(let i = 1; i<len; i++)\r\n\t{\r\n\t\tlet j = i, j1:number;\r\n\r\n\t\twhile(j>0 && target[(j1 = j - 1)]>target[j])\r\n\t\t{\r\n\t\t\tlet swap = target[j];\r\n\t\t\ttarget[j] = target[j1];\r\n\t\t\ttarget[j1] = swap;\r\n\t\t\tj--;\r\n\t\t}\r\n\t}\r\n\r\n\treturn target;\r\n\r\n}\r\n"]}